Given a string s, return the longest palindromic substring in s.

Example 1:

Input: s = "babad"
Output: "bab"
Note: "aba" is also a valid answer.

Example 2:

Input: s = "cbbd"
Output: "bb"

Example 3:

Input: s = "a"
Output: "a"

Example 4:

Input: s = "ac"
Output: "a"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters.


-----Solution-----
class Solution {
    public String longestPalindrome(String s) {
        String ans = "";
        int ansLen = 0;
        
        for (int i = 0; i < s.length(); i++) {
            // Odd
            int left = i;
            int right = i;

            while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
                if ((right - left + 1) > ansLen) {
                    ansLen = right - left + 1;
                    ans = s.substring(left, right+1); // end must plus 1
                }
                left--;
                right++;
            }
            // Even
            left = i;
            right = i+1;

            while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
                if ((right - left + 1) > ansLen) {
                    ansLen = right - left + 1;
                    ans = s.substring(left, right+1); // end must plus 1
                }
                left--;
                right++;
            }
        }
        return ans;
    }
}