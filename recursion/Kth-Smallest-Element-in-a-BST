Note that a BST (Binary Search Tree) is a node-based tree data structure which has the following properties:
    - left subtree of a node contains only nodes with keys lesser than the node's key
    - right subtree of a node contains only nodes with keys greater than the node's key
    - left and right subtree each must also be a binary search tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        self.k = k
        self.res = None
        self.root = root
        self.helper(root)
        return self.res
        
    def helper(self, node):
        if not node:
            return
        self.helper(node.left)
        self.k -= 1
        if self.k == 0:
            self.res = node.val
            return
        self.helper(node.right)